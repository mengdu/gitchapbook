<style>
@import 'weui.wxss';
page{
  background-color: #EBEBEB;
  font-size: 13pt;
}
.weui-panel{
  border: solid 1px #E4E4E4;
  border-radius: 5px;
  overflow: hidden;
}
.weui-panel::after,
.weui-panel::before{
  border-width: 0;
  border-style: none;
  border-color: transparent;
}
.weui-media-box::before{
  left: 0;
}
.weui-media-box:first-child{
  border-top-left-radius: 5px; 
  border-top-right-radius: 5px; 
}
.weui-media-box:last-child{
  border-bottom-left-radius: 5px; 
  border-bottom-right-radius: 5px; 
}
.weui-cell_active{
  background: #F1F1F1;
}
.weui-loadmore{
  margin: 0 auto;
  margin-top: 30px;
}
.weui-loadmore .weui-loadmore__tips_in-line{
  background: #D4D4D4;
  border-radius: 3px;
}
.m-loadmore{
  border-top: none;
}
.m-loadmore .weui-loadmore__tips_in-line{
  color: #fff;
}
.article-cover{
  margin: 10rpx 0;
  width: 100%;
  max-height: 150px;
}



.body{
  padding: 10px;
  box-sizing: border-box;
}
.table-layout{
  width: 100%;
  height: 100%;
  display: table;
}
.table-layout .table-layout-body{
  display: table-cell;
  vertical-align: middle;
  text-align: center;
}
.table-layout .table-layout-item{
  display: inline-block;
}

.f-left{
  float: left;
}
.f-right{
  float: right;
}

</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/home/article',
      'pages/home/home'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'git小书',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      backgroundColor: '#2B3A42',
      selectedColor: '#fff',
      color: '#5A6A6F',
      list: [
        {
          pagePath: 'pages/home/home',
          text: '主页',
          iconPath: 'imgs/home.png',
          selectedIconPath: 'imgs/home-focus.png'
        },
        {
          pagePath: 'pages/home/article',
          text: '关于',
          iconPath: 'imgs/info.png',
          selectedIconPath: 'imgs/info-focus.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
